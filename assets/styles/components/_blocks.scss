//
// Set spacing and max widths according to the 'align' setting.
//

.hentry .entry-header,
.hentry .entry-footer {
  margin-left: auto;
  margin-right: auto;

  @include make-container-max-widths((
    "sm" : map-get($container-max-widths, "sm") - $grid-gutter-width,
    "md" : map-get($container-max-widths, "md") - $grid-gutter-width,
    "lg" : map-get($container-max-widths, "lg") - $grid-gutter-width,
    "xl" : map-get($container-max-widths, "xl") - $grid-gutter-width,
  ));
}

.hentry .entry-content {
  @include clearfix();
}

.hentry .entry-content > * {
  margin: map-get($spacers, 3) auto;

  @include make-container-max-widths((
    "sm" : map-get($container-max-widths, "sm") - $grid-gutter-width,
    "md" : map-get($container-max-widths, "md") - $grid-gutter-width,
    "lg" : map-get($container-max-widths, "lg") - $grid-gutter-width,
  ));

  @include media-breakpoint-up( md ) {
    margin-top: map-get($spacers, 4);
    margin-bottom: map-get($spacers, 4);
  }

  > *:first-child {
    margin-top: 0;
  }

  > *:last-child {
    margin-bottom: 0;
  }

  &.alignwide {
    clear: both;

    @include make-container-max-widths((
      "xl" : map-get($container-max-widths, "xl") - $grid-gutter-width,
    ));
  }

  &.alignfull {
    clear: both;
    // Stretch outside container to fit viewport width.
    position: relative;
    left: -#{$grid-gutter-width/2};
    width: calc(100% + (#{$grid-gutter-width}));
    max-width: calc(100% + (#{$grid-gutter-width}));
  }

  &.alignleft {
    @include media-breakpoint-up( md ) {
      float: left;
      margin-right: ($spacer / 2);
      height: auto;
    }
  }

  &.alignright {
    @include media-breakpoint-up( md ) {
      float: right;
      margin-left: ($spacer / 2);
    }
  }

  &.aligncenter {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
}
